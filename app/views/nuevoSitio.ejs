<% include head %>
<div class="container mt-3">
  <h2 class="">Nuevo sitio</h2><br>
  <div class="panel-instrucciones">
    <button type="button" class="btn btn-link" data-toggle="collapse" data-target="#instrucciones"><i class="fas fa-info-circle"></i> Instrucciones.</button>
    <div id="instrucciones" class="collapse in">
      <ul class="list-unstyled">
        <li><strong>Pon nombre al sitio</strong></li>
          <ul>
            <li>No podrás ponerle el nombre de un sitio existente, ni llamarlo "nuevo"</li>
          </ul>
        <li><strong>Busca en el mapa la localización del sitio</strong></li>
          <ul>
            <li>Pulsa el cuadro con el símbolo <i class="fas fa-search"></i> y escribe el nombre de un lugar.</li>
            <li>También puedes desplazar el icono <i class="fas fa-map-marker-alt text-primary"></i> donde quieras establecer tu sitio.</li>
          </ul>
        <li><strong>Para finalizar debes pulsar el botón de <i>Crear sitio</i></strong></li>
      </ul>
    </div>
  </div>

  <form name="nuevoSitioForm" method="post" onsubmit="return validateForm()" action="/sitio/">

    <input type="hidden" name="lat" id="lat" value="40.452658">
    <input type="hidden" name="lng" id="lng" value="-3.726201">
    <h4>Elige un nombre para el sitio</h4>
    <div class="form-group row">
        <div class="col-9">
          <input type="text" name ="direccion" class="form-control is-invalid" id="direccion" placeholder="Introduce el nombre del nuevo sitio...">
        </div>
      <span id="icono" class="col-1 fas fa-times fa-2x text-danger"></span>
    </div>
  <h4>Selecciona una ubicación</h4>
    <div class="map-container">
      <div id="map"></div>
    </div>
    <br>
    <div class="row nuevo-sitio-boton-enviar">
      <button id="botonEnviar" class="btn btn-success btn-block btn-lg" type="submit" disabled="disabled" onClick="return confirm('¿Añadir nuevo sitio?');">Crear sitio</button>
    </div>
</form>
  <!-- Elementos para GoogleMaps
  <div class="pac-card" id="pac-card">
    <div id="title">
      Búsqueda
    </div>

    <div id="pac-container">
      <input id="pac-input" type="text"
      placeholder="Búsca por una localización">
    </div>
  </div>

  <div id="infowindow-content">
    <img src="" width="16" height="16" id="place-icon">
    <span id="place-name"  class="title"></span><br>
    <span id="place-address"></span>
  </div>
-->
</div>
<% include listaQuedadas %>
<% include footer %>
<% include nav %>
<script>
var sitios = <%- JSON.stringify(sitios) %>;
var texto = document.getElementById('direccion');


function validateForm() {
  //console.log("entro a validar nuevo sitios");
  var x = document.forms["nuevoSitioForm"]["direccion"].value;
  if (sitios.includes(x) || x == "" || x.toLowerCase() == "nuevo" ) {
    document.getElementById("icono").classList.remove('text-success');
    document.getElementById("direccion").classList.remove('is-valid');
    document.getElementById("icono").classList.remove('fa-check');
    document.getElementById('botonEnviar').classList.remove('btn-success');

    document.getElementById("icono").classList.add('text-danger');
    document.getElementById("direccion").classList.add('is-invalid');
    document.getElementById("icono").classList.add('fa-times');
    document.getElementById('botonEnviar').classList.add('btn-danger');

    document.getElementById('botonEnviar').disabled = true;
    return false;
  } else {
    document.getElementById("icono").classList.remove('text-danger');
    document.getElementById("direccion").classList.remove('is-invalid');
    document.getElementById("icono").classList.remove('fa-times');
    document.getElementById('botonEnviar').classList.remove('btn-danger');

    document.getElementById("icono").classList.add('text-success');
    document.getElementById("direccion").classList.add('is-valid');
    document.getElementById("icono").classList.add('fa-check');
    document.getElementById('botonEnviar').classList.add('btn-success');

    document.getElementById('botonEnviar').disabled = false;
    return true;
  }
  return false;
}

texto.addEventListener("keyup", function (event) {
validateForm();
}, false);

</script>

<script type="text/javascript">
  var initLocation = [40.452658, -3.726201];
  var mymap = L.map('map').setView(initLocation, 20);
  <%if (HereMapsAppID !== "" && HereMapsAppCode !== "" && UseOpenStreetMaps !== true) { %>
    L.tileLayer("https://2.base.maps.api.here.com/maptile/2.1/maptile/newest/normal.day.transit/{z}/{x}/{y}/512/png8?app_id=" + "ZufL8LUCsn4530iRov3l" + "&app_code=" + "PD0XFT1gq8aU1O0s9JmSlA" + "&ppi=320", {}).addTo(mymap);
  <% } else { %>
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png?{foo}', {foo: 'bar', attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>'}).addTo(mymap);
  <% } %>

  var marker = L.marker(initLocation, {
    draggable: true,
    autoPan: true
  }).addTo(mymap);
  marker.on('dragend', function(ev){
    var lat = marker.getLatLng().lat;
    var lng = marker.getLatLng().lng;
    $('#lat').val(lat);
    $('#lng').val(lng);
  });

  var geocoder = L.Control.geocoder({
    placeholder: "Búsqueda...",
    errorMessage: "No se han encontrado resultados",
    defaultMarkGeocode: false
  }).addTo(mymap);

  geocoder.on('markgeocode',function(ev){
    console.log(ev);
    mymap.setView(ev.geocode.center);
    marker.setLatLng(ev.geocode.center);
    var lat = ev.geocode.center.lat;
    var lng = ev.geocode.center.lng;
    $('#lat').val(lat);
    $('#lng').val(lng);
  })
</script>

<!-- Script de inicializacion de GoogleMaps
<script>
function initMap() {
  var location = {lat: 40.452658, lng: -3.726201};
  var map = new google.maps.Map(document.getElementById('map'), {
    center: location,    streetViewControl: false,
    zoom: 17
  });
  var card = document.getElementById('pac-card');
  var input = document.getElementById('pac-input');
  var types = document.getElementById('type-selector');
  var strictBounds = document.getElementById('strict-bounds-selector');

  map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

  var autocomplete = new google.maps.places.Autocomplete(input);

  // Bind the map's bounds (viewport) property to the autocomplete object,
  // so that the autocomplete requests use the current map bounds for the
  // bounds option in the request.
  autocomplete.bindTo('bounds', map);

  // Set the data fields to return when the user selects a place.
  autocomplete.setFields(
    ['address_components', 'geometry', 'icon', 'name']);

    var infowindow = new google.maps.InfoWindow();
    var infowindowContent = document.getElementById('infowindow-content');
    infowindow.setContent(infowindowContent);
    var marker = new google.maps.Marker({
      position: location,
      map: map,
      draggable: true,
      anchorPoint: new google.maps.Point(0, -29)
    });

    autocomplete.addListener('place_changed', function() {
      infowindow.close();
      marker.setVisible(false);
      var place = autocomplete.getPlace();
      if (!place.geometry) {
        // User entered the name of a Place that was not suggested and
        // pressed the Enter key, or the Place Details request failed.
        window.alert("No details available for input: '" + place.name + "'");
        return;
      }

      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);  // Why 17? Because it looks good.
      }
      marker.setPosition(place.geometry.location);
      marker.setVisible(true);

      var address = '';
      if (place.address_components) {
        address = [
          (place.address_components[0] && place.address_components[0].short_name || ''),
          (place.address_components[1] && place.address_components[1].short_name || ''),
          (place.address_components[2] && place.address_components[2].short_name || '')
        ].join(' ');
      }

      infowindowContent.children['place-icon'].src = place.icon;
      infowindowContent.children['place-name'].textContent = place.name;
      infowindowContent.children['place-address'].textContent = address;
      infowindow.open(map, marker);
      var lat = marker.getPosition().lat();
      var lng = marker.getPosition().lng();
      $('#lat').val(lat);
      $('#lng').val(lng);
    });

    google.maps.event.addListener(marker, 'dragend', function(){
      var lat = marker.getPosition().lat();
      var lng = marker.getPosition().lng();
      $('#lat').val(lat);
      $('#lng').val(lng);
    });
    google.maps.event.addListener(marker, 'dragstart', function(){
      infowindow.close();
    });
  }
</script>

<script async defer
src="https://maps.googleapis.com/maps/api/js?key=<%- GoogleMapsAPIkey %>&libraries=places&callback=initMap">
</script>
-->
